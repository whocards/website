---
import type {HTMLAttributes} from 'astro/types'
import type {ZodIssue} from 'zod'

interface Props extends HTMLAttributes<'input'> {
  name: string
  class?: string
  error?: ZodIssue
}
const {name, required, class: classes, error, ...props} = Astro.props
const id = `checkbox-${name}`
---

<label
  for={id}
  class='text-start capitalize text-base font-medium cursor-pointer flex gap-4 py-2.5'
  class:list={[classes]}
>
  <input
    type='checkbox'
    {...props}
    id={id}
    name={name}
    class='checkbox checkbox-md rounded-md border-2 mt-2 xl:mt-0 border-white checked:border-gray-lighter'
    class:list={{'border-red': error}}
  />
  <span class='flex flex-col'>
    <span class='basis-full'>{required ? '* ' : ''}<slot /></span>
    <p class='flex flex-1 text-xs text-red'>{error?.message ?? <>&nbsp;</>}</p>
  </span>
</label>

<script define:vars={{id, required}}>
  const el = document.getElementById(id)
  if (required && !el.checked) {
    document.getElementById(id).setCustomValidity('This field must be checked')
  }
  el.addEventListener('change', (e) => {
    e.target.setAttribute('checked', e.target.checked)
    el.setCustomValidity(e.target.checked ? '' : 'This field must be checked')
  })
</script>
