---
export const prerender = false

import type {ZodIssue} from 'zod'
import Input from '~components/Form/Input.astro'
import {openCollectiveProducts} from '~constants/products'
import Layout from '~layouts/Layout.astro'
import {createSheetRow, createZenShipping} from '~server/csv'
import {
  getPurchaseById,
  insertShippingAddress,
  insertShippingSchema,
  type PurchaseSelect,
  type UserSelect,
} from '~server/db'

let errors
let formData
let submitted: boolean = false
let user: UserSelect | null
let purchase: PurchaseSelect
let quantity: number

// TODO validate not resubmitting

// when form is posted
if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData()
    formData = Object.fromEntries(data.entries()) as Record<string, string>
    const shipping = insertShippingSchema.safeParse(formData)
    // invalid form
    if (!shipping.success) {
      errors = shipping.error.issues?.reduce(
        (acc, curr) => {
          acc[`${curr.path[0]}`] = curr
          return acc
        },
        {} as Record<string, ZodIssue>
      )
    } else {
      // TODO validate form before submit
      // valid form
      const [dbShipping] = await insertShippingAddress(shipping.data)
      const zenShipping = await createZenShipping(dbShipping)
      if (!zenShipping.errors.length) {
        submitted = true
        await createSheetRow(dbShipping)
      }
    }
  } catch (error) {
    console.error(error)
  }
}

const purchaseId = Astro.url.searchParams.get('orderIdV2') ?? ''

// TODO where should redirect happen?
if (!purchaseId) {
  return Astro.redirect('/preorder?error=missingParams')
}

try {
  const dbModels = await getPurchaseById(purchaseId)
  purchase = dbModels.purchase
  user = dbModels.user
  quantity = openCollectiveProducts.filter((p) => p.title === purchase.category)[0].quantity
  if (!user || !purchase || !quantity) {
    throw new Error('invalidParams')
  }
} catch (error) {
  return Astro.redirect('/preorder?error=invalidParams')
}
---

<Layout title='Thank You!'>
  <h1>thanks!</h1>

  {
    submitted && (
      <div class='bg-green-100 text-green-800 p-4 mb-4'>
        Your shipping information has been submitted!
      </div>
    )
  }

  <form id='address-form' method='POST' class='flex flex-col'>
    <Input name='name' value={formData?.name ?? user!.name} error={errors?.name} />
    <Input name='email' value={formData?.email ?? user!.email} error={errors?.email} />
    <Input name='phone' value={formData?.phone} error={errors?.phone} />
    <div class='flex gap-4'>
      <Input name='address' title='street 1' value={formData?.address} error={errors?.address} />
      <Input name='address2' title='street 2' value={formData?.address2} error={errors?.address2} />
    </div>
    <div class='flex gap-4'>
      <Input name='zip' title='zip code' value={formData?.zip} error={errors?.zip} />
      <Input name='city' value={formData?.city} error={errors?.city} />
    </div>
    <div class='flex gap-4'>
      <Input name='region' value={formData?.region} error={errors?.region} />
      <Input name='country' value={formData?.country} error={errors?.country} />
    </div>

    <!-- hidden inputs -->
    <input type='hidden' name='purchaseId' value={purchaseId} />
    <input type='hidden' name='quantity' value={quantity} />
    <button type='submit' class='btn btn-primary mt-4' disabled={submitted}>submit</button>
  </form>
</Layout>
