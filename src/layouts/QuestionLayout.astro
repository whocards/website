---
import Icon from 'astro-icon'
import Layout from './Layout.astro'

const {language} = Astro.params
---

<Layout>
  <div class='grid-rows-question grid h-full w-full justify-center gap-12 p-4 md:gap-[20%]'>
    <slot />
    <div class='flex w-full max-w-2xl items-center justify-between justify-self-center'>
      <a id='prev' class='game-btn enabled'>
        <Icon name='ic:outline-arrow-back' class:list='h-10 w-10' />
      </a>
      <div class='flex gap-6'>
        <button
          class:list={[
            'btn btn-circle who-modal uppercase bg-gray hover:bg-gray hover:text-primary-light',
            {'w-fit px-4': language?.includes('-')},
          ]}>{language}</button
        >
        <button id='share' class='hidden'>
          <Icon name='ic:twotone-share' class='h-6 w-6' />
        </button>
        <!-- <button id="full-screen" class="game-btn" onclick="document.documentElement.requestFullscreen()">
          <Icon name="ps:full-screen" class="h-6 w-6" />
        </button> -->
      </div>
      <a id='next' class='game-btn enabled'>
        <Icon name='ic:outline-arrow-forward' class='h-10 w-10' />
      </a>
    </div>
  </div>
</Layout>

<style>
  .game-btn {
    @apply btn-ghost btn-circle btn transition-all duration-500 ease-linear;
  }
  a.disabled {
    @apply pointer-events-none text-gray opacity-50;
  }
  a.enabled {
    @apply hover:bg-transparent hover:text-yellow-500;
  }
</style>

<script>
  document.getElementById('full-screen')?.addEventListener('click', () => {
    document.documentElement.requestFullscreen()
  })
</script>

<script>
  import {initPage, idsStore, GameStatus} from '~stores/Game.store'
  import {getCurrentQuestionId, getQuestionUrl} from '~utils'

  initPage(getCurrentQuestionId())

  const dirs = ['prev', 'next']
  const els = {
    [dirs[0]]: document.getElementById(dirs[0])!,
    [dirs[1]]: document.getElementById(dirs[1])!,
  }
  const keys: {[key: string]: string} = {
    ArrowLeft: dirs[0],
    ArrowRight: dirs[1],
  }

  dirs.forEach((dir) => {
    const qid = idsStore.get()[dir as keyof GameStatus]

    if (qid) {
      els[dir].setAttribute('href', getQuestionUrl(qid)!)
    } else {
      els[dir].classList.replace('enabled', 'disabled')
    }
  })

  const keyPress = (e: KeyboardEvent) => {
    if (Object.keys(keys).includes(e.key)) {
      els[keys[e.key]].click()
    }
  }

  document.addEventListener('keydown', keyPress)

  // share button
  if (!!navigator.share) {
    const shareEl = document.getElementById('share')
    shareEl?.classList.replace('hidden', 'game-btn')
    shareEl?.addEventListener('click', () => {
      navigator.share({
        title: 'Who cards - Question ' + getCurrentQuestionId(),
        url: window.location.toString(),
      })
    })
  } else {
  }
</script>
